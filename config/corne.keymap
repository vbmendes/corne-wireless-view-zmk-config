#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        circspc: circspc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_6) &kp SPACE>;
            label = "CIRCSPC";
        };

        quotspace: quotspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SPACE>;
            label = "QUOTSPACE";
        };

        tildespace: tildespace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(GRAVE) &kp SPACE>;
            label = "TILDESPACE";
        };

        dquotespace: dquotespace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(SINGLE_QUOTE) &kp SPACE>;
            label = "DQUOTESPACE";
        };

        gravespace: gravespace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp SPACE>;
            label = "GRAVESPACE";
        };
    };

    combos {
        compatible = "zmk,combos";

        lsft {
            bindings = <&kp LSHFT>;
            key-positions = <15 16>;
        };

        rsft {
            bindings = <&kp RSHFT>;
            key-positions = <19 20>;
        };

        lgui {
            bindings = <&kp LGUI>;
            key-positions = <27 28>;
        };

        rgui {
            bindings = <&kp RGUI>;
            key-positions = <31 32>;
        };

        lctl {
            bindings = <&kp LCTRL>;
            key-positions = <26 27>;
        };

        rctl {
            bindings = <&kp RCTRL>;
            key-positions = <32 33>;
        };

        lalt {
            bindings = <&kp LALT>;
            key-positions = <25 28>;
        };

        ralt {
            bindings = <&kp RALT>;
            key-positions = <31 34>;
        };

        lhypr {
            bindings = <&kp LA(LC(LG(LSHFT)))>;
            key-positions = <1 2 3 4>;
        };

        rhypr {
            bindings = <&kp LA(LC(LG(LSHFT)))>;
            key-positions = <7 8 9 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&gresc                  &kp Q  &kp W  &kp E  &kp R  &kp T      &kp Y      &kp U      &kp I      &kp O       &kp P          &kp BACKSPACE
&kp LA(LC(LG(LSHIFT)))  &kp A  &kp S  &kp D  &kp F  &kp G      &kp H      &kp J      &kp K      &kp L       &kp SEMICOLON  &kp LA(LC(LG(LSHFT)))
&kp LA(LC(LSHIFT))      &kp Z  &kp X  &kp C  &kp V  &kp B      &kp N      &kp M      &kp COMMA  &kp PERIOD  &kp SLASH      &kp LA(LC(LSHFT))
                                      &mo 2  &mo 4  &kp TAB    &kp ENTER  &kp SPACE  &mo 1
            >;
        };

        symbols {
            bindings = <
&to 0   &kp EXCLAMATION    &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp ASTRK  &kp LPAR    &kp RPAR     &kp MINUS     &kp EQUAL    &trans
&trans  &kp UNDERSCORE     &kp LBRC     &kp LPAR  &kp LBKT    &kp AMPS       &circspc   &quotspace  &tildespace  &dquotespace  &gravespace  &to 2
&trans  &kp LC(LG(SPACE))  &kp RBRC     &kp RPAR  &kp RBKT    &kp PIPE       &kp CARET  &kp SQT     &kp TILDE    &kp DQT       &kp GRAVE    &to 3
                                        &mo 3     &to 0       &trans         &trans     &mo 4       &trans
            >;
        };

        numpad {
            bindings = <
&to 0   &kp EXCL           &kp AT    &kp HASH  &kp DOLLAR  &kp PRCNT    &kp ASTRK  &kp N7  &kp N8  &kp N9  &kp EQUAL      &trans
&trans  &kp UNDER          &kp LBRC  &kp LPAR  &kp LBKT    &kp AMPS     &kp MINUS  &kp N4  &kp N5  &kp N6  &kp BACKSPACE  &to 2
&to 3   &kp LC(LG(SPACE))  &kp RBRC  &kp RPAR  &kp RBKT    &kp PIPE     &kp PLUS   &kp N1  &kp N2  &kp N3  &kp BSLH       &to 3
                                     &trans    &to 0       &trans       &trans     &trans  &kp N0
            >;
        };

        function {
            bindings = <
&to 0        &kp F1                &kp F2                &kp F3            &kp F4          &kp F5     &kp F6   &kp F7           &kp F8                 &kp F9            &kp F10            &trans
&caps_word   &kp LSHFT             &kp LCTRL             &kp LG(LS(N3))    &kp LS(LG(N4))  &kp F11    &kp F12  &mt RGUI C_PREV  &mt RALT C_PLAY_PAUSE  &mt RCTRL C_NEXT  &mt RSHIFT C_STOP  &trans
&kp C_RESET  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LC(UP_ARROW)  &trans          &trans     &trans   &kp C_MUTE       &kp C_VOL_DN           &kp C_VOL_UP      &kp K_LOCK         &kp LS(LA(LC(LG(GRAVE))))
                                                         &trans            &to 0           &trans     &trans   &trans           &trans
            >;
        };

        nav {
            bindings = <
&to 0   &kp ESC    &kp LA(LC(LG(LSHFT)))  &kp LA(LC(LSHFT))  &trans    &trans     &kp HOME        &kp PG_DN  &kp PG_UP     &kp END          &kp EQUAL      &trans
&trans  &kp LSHFT  &kp LCTRL              &kp LALT           &kp LGUI  &kp DEL    &kp LEFT_ARROW  &kp DOWN   &kp UP_ARROW  &kp RIGHT_ARROW  &kp BACKSPACE  &trans
&trans  &trans     &trans                 &trans             &trans    &trans     &kp CARET       &kp SQT    &kp TILDE     &kp DQT          &kp GRAVE      &trans
                                          &trans             &to 0     &trans     &trans          &trans     &trans
            >;
        };
    };
};
