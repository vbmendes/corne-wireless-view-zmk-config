#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        circspc: circspc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_6) &kp SPACE>;
            label = "CIRCSPC";
        };

        quotspace: quotspace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SPACE>;
            label = "QUOTSPACE";
        };

        tildespace: tildespace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(GRAVE) &kp SPACE>;
            label = "TILDESPACE";
        };

        dquotespace: dquotespace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(SINGLE_QUOTE) &kp SPACE>;
            label = "DQUOTESPACE";
        };

        gravespace: gravespace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp SPACE>;
            label = "GRAVESPACE";
        };

        cedilla: cedilla {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp C>;
            label = "Ã‡";
        };
    };

    combos {
        compatible = "zmk,combos";

        lsft {
            bindings = <&kp LSHFT>;
            key-positions = <15 16>;
            layers = <0 1 2 3>;
        };

        rsft {
            bindings = <&kp RSHFT>;
            key-positions = <19 20>;
            layers = <0 1 2 3>;
        };

        lgui {
            bindings = <&kp LGUI>;
            key-positions = <27 28>;
            layers = <0 1 2 3>;
        };

        ltgui {
            bindings = <&kp LGUI>;
            key-positions = <36 37>;
            layers = <0 1 2 3>;
        };

        rtgui {
            bindings = <&kp LGUI>;
            key-positions = <40 41>;
            layers = <0 1 2 3>;
        };

        ltguia {
            bindings = <&kp LGUI>;
            key-positions = <37 38>;
            layers = <0 1 2 3>;
        };

        rtguia {
            bindings = <&kp LGUI>;
            key-positions = <39 40>;
            layers = <0 1 2 3>;
        };

        rgui {
            bindings = <&kp RGUI>;
            key-positions = <31 32>;
            layers = <0 1 2 3>;
        };

        lctl {
            bindings = <&kp LCTRL>;
            key-positions = <26 27>;
            layers = <0 1 2 3>;
        };

        rctl {
            bindings = <&kp RCTRL>;
            key-positions = <32 33>;
            layers = <0 1 2 3>;
        };

        lalt {
            bindings = <&kp LALT>;
            key-positions = <25 28>;
            layers = <0 1 2 3>;
        };

        ralt {
            bindings = <&kp RALT>;
            key-positions = <31 34>;
            layers = <0 1 2 3>;
        };

        lhypr {
            bindings = <&kp LA(LC(LG(LSHFT)))>;
            key-positions = <1 2 3 4>;
            layers = <0 1 2 3>;
        };

        rhypr {
            bindings = <&kp LA(LC(LG(LSHFT)))>;
            key-positions = <7 8 9 10>;
            layers = <0 1 2 3>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <14 15 20 21>;
            layers = <0 1 2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            display-name = "qwerty";
            bindings = <
&kp TAB             &kp Q  &kp W  &kp E  &kp R  &kp T                        &kp Y      &kp U      &kp I      &kp O       &kp P          &kp BACKSPACE
&kp LA(LC(LSHIFT))  &kp A  &kp S  &kp D  &kp F  &kp G                        &kp H      &kp J      &kp K      &kp L       &kp SEMICOLON  &kp LA(LC(LSHFT))
&kp LGUI            &kp Z  &kp X  &kp C  &kp V  &kp B                        &kp N      &kp M      &kp COMMA  &kp PERIOD  &kp SLASH      &kp LGUI
                                         &mo 2  &mo 4  &kp LSHFT  &kp SPACE  &mo 1      &mt LGUI ENTER  
            >;
        };

        symbols {
            display-name = "symbols";
            bindings = <
&to 0   &kp EXCLAMATION    &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                    &kp ASTRK  &kp LPAR    &kp RPAR     &kp MINUS   &kp EQUAL      &to 0
&to 2   &kp LBRC           &kp RBRC     &kp LPAR  &kp RPAR    &kp UNDERSCORE                 &kp CARET  &kp SQT     &kp GRAVE    &cedilla    &kp BACKSPACE  &to 2
&to 3   &kp LC(LG(SPACE))  &kp BSLH     &kp LBKT  &kp RBKT    &kp AMPS                       &circspc   &quotspace  &gravespace  &kp LA(N0)  &kp LA(N9)     &to 3
                                                  &mo 3       &trans          &trans  &mo 4  &trans     &trans
            >;
        };

        numpad {
            display-name = "numpad";
            bindings = <
&to 0   &kp EXCL           &kp AT    &kp HASH  &kp DOLLAR  &kp PRCNT                       &kp ASTRK  &kp N7  &kp N8  &kp N9  &kp EQUAL      &to 0
&to 2   &kp LBRC           &kp RBRC  &kp LPAR  &kp RPAR    &kp UNDERSCORE                  &kp MINUS  &kp N4  &kp N5  &kp N6  &kp BACKSPACE  &to 2
&to 3   &kp LC(LG(SPACE))  &kp BSLH  &kp LBKT  &kp RBKT    &kp AMPS                        &kp PLUS   &kp N1  &kp N2  &kp N3  &kp DOT        &to 3
                                               &mo 3       &trans          &trans  &trans  &kp N0     &trans
            >;
        };

        function {
            display-name = "function";
            bindings = <
&to 0        &kp F1        &mt LA(LC(LG(LSHFT))) F2  &mt LA(LC(LSHFT)) F3  &kp F4               &kp F5                        &kp F6   &kp F7           &mt LA(LC(LSHFT)) F8   &mt LA(LC(LG(LSHFT))) F9  &kp F10            &kp C_BRIGHTNESS_INC
&kp C_RESET  &kp LSHFT     &kp LCTRL                 &mt LALT LS(LG(N3))   &mt LGUI LS(LG(N4))  &kp F11                       &kp F12  &mt RGUI C_PREV  &mt RALT C_PLAY_PAUSE  &mt RCTRL C_NEXT          &mt RSHIFT C_STOP  &kp C_BRIGHTNESS_DEC
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1              &bt BT_SEL 2          &bt BT_SEL 3         &bt BT_SEL 4                  &trans   &kp C_MUTE       &kp C_VOL_DN           &kp C_VOL_UP              &kp K_LOCK         &kp LS(LA(LC(LG(GRAVE))))
                                                                           &trans               &trans       &trans  &trans   &trans   &trans
            >;
        };

        nav {
            display-name = "nav";
            bindings = <
&to 0   &kp ESC    &kp HOME        &kp PG_DN  &kp PG_UP     &kp END                              &kp HOME           &kp PG_DN  &kp PG_UP     &kp END          &kp LC(LG(Q))  &to 0
&to 2   &kp DEL    &kp LEFT_ARROW  &kp DOWN   &kp UP_ARROW  &kp RIGHT_ARROW                      &kp LEFT_ARROW     &kp DOWN   &kp UP_ARROW  &kp RIGHT_ARROW  &kp BACKSPACE  &to 2
&to 3   &kp LSHFT  &kp LCTRL       &kp LALT   &kp LGUI      &kp LA(LC(LSHFT))                    &kp LA(LC(LSHFT))  &kp LGUI   &kp LALT      &kp LCTRL        &kp LSHFT      &to 3
                                              &trans        &trans             &kp LGUI  &trans  &kp EQUAL          &trans
            >;
        };
    };
};
